---
name: Build, Scan & Push

# Make the workflow re-usable
on:
  workflow_call:
    inputs:
      image_tags:
        description: |
          The tags the pushed image will have.
          i.e. for pull requests : type=raw,value=PR-{{date 'YYYYMMDD'}}-{{sha}}
          You can enter multiple tags using a pipe
          Reference : https://github.com/docker/metadata-action#tags-input
        required: true
        type: string
      trivy_upload_sarif:
        description: "Upload result of Trivy scan to GitHub's security page"
        default: true
        required: false
        type: boolean
      trivy_treshold:
        description: "Trivy scan treshold for failure (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)"
        default: "HIGH,CRITICAL"
        required: false
        type: string
      trivy_ignore_unfixed:
        description: "Ignore unfixed CVEs in Trivy scan"
        default: true
        required: false
        type: boolean

jobs:

  build-push-scan:

    name: Build push & scan Dockerfile
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      packages: write
      security-events: write

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub CR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ inputs.image_tags }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Generate Trivy sarif report
        if: ${{ inputs.trivy_upload_sarif }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.metadata.outputs.tags }}
          exit-code: 0
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: ${{ inputs.trivy_ignore_unfixed }}

      - name: Upload Trivy sarif report
        if:  ${{ inputs.trivy_upload_sarif }} && ( success() || failure() )
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Scan for fixable CVEs with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.metadata.outputs.tags }}
          exit-code: 1
          ignore-unfixed: ${{ inputs.trivy_ignore_unfixed }}
          severity: ${{ inputs.trivy_treshold }}

